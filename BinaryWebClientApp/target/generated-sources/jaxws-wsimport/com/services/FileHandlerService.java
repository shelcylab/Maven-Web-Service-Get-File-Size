
package com.services;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FileHandlerService", targetNamespace = "http://services.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FileHandlerService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileName", targetNamespace = "http://services.com/", className = "com.services.GetFileName")
    @ResponseWrapper(localName = "getFileNameResponse", targetNamespace = "http://services.com/", className = "com.services.GetFileNameResponse")
    @Action(input = "http://services.com/FileHandlerService/getFileNameRequest", output = "http://services.com/FileHandlerService/getFileNameResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://services.com/FileHandlerService/getFileName/Fault/Exception")
    })
    public String getFileName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1)
        throws Exception_Exception
    ;

    /**
     * 
     */
    @WebMethod(operationName = "WaitFor10Secs")
    @RequestWrapper(localName = "WaitFor10Secs", targetNamespace = "http://services.com/", className = "com.services.WaitFor10Secs")
    @ResponseWrapper(localName = "WaitFor10SecsResponse", targetNamespace = "http://services.com/", className = "com.services.WaitFor10SecsResponse")
    @Action(input = "http://services.com/FileHandlerService/WaitFor10SecsRequest", output = "http://services.com/FileHandlerService/WaitFor10SecsResponse")
    public void waitFor10Secs();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileSize", targetNamespace = "http://services.com/", className = "com.services.GetFileSize")
    @ResponseWrapper(localName = "getFileSizeResponse", targetNamespace = "http://services.com/", className = "com.services.GetFileSizeResponse")
    @Action(input = "http://services.com/FileHandlerService/getFileSizeRequest", output = "http://services.com/FileHandlerService/getFileSizeResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://services.com/FileHandlerService/getFileSize/Fault/Exception")
    })
    public int getFileSize(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1)
        throws Exception_Exception
    ;

}
